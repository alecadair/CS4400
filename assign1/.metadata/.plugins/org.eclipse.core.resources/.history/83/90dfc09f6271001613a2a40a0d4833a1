#include <stdlib.h>
#include <stdio.h>

unsigned char isUpperCase(char letter){
	if((letter < 'A') || (letter > 'Z')){
		return 0;
	}
	else{
		//upperCases[index] = letter;
		return 1;
	}
}

unsigned char isDecimalDigit(char c){
	if((c < '0')||(c > '9')){
		return 0;
	}
	else{
		return 1;
	}
}

unsigned char checkOddChars(char* Uppers, char* toCheck ){
    for(int i = 0; toCheck[i] != '\0'; i++){
    		if(toCheck[i] != Uppers[i*2 + 1]){
    			return 0;
    		}
    }
	return 1;
}

unsigned char checkArgument(const char* word, int MODE){
	switch(MODE){
				case 0:{
					//printf("made it to case 0");
					//check for even amount of e
					int letterCount = 0;
					int eCounter = 0;
					for(int j = 0; word[j] == 'e'; j++){
						eCounter ++;
						letterCount ++;
					}
					if((eCounter&1)){
						return 0;
						/*if(!TMODE){
							printf("no\n");
						}*/
					}
					else{
						int pCounter = 0;
						for(int j = letterCount; word[j] == 'p'; j++){
							pCounter ++;
							letterCount++;
						}
						if(pCounter&1){
							int upCounter = 0;
							for(int j = letterCount; isUpperCase(word[j]); j++){
								upCounter++;
								letterCount++;
							}
							if(upCounter&1){
								return 1;
//								if(!TMODE){
//									printf("yes\n");
//								}
//								else{
//									char conversion[letterCount];
//									for(int j = 0; j < letterCount; j++){
//										conversion[j] = word[letterCount-1];
//									}
//									conversion[letterCount] = '\0';
//									printf("%s\n", conversion);
//								}
							}
							else{
								return 0;
//								if(!TMODE)
//									printf("no\n");
							}
						}
						else{
							return 0;
							//if(!TMODE)
							//	printf("no\n");
						}
					}
					break;
				}
				case 1:{
					int eCounter = 0;
					int letterCount = 0;
					for(int j = 0; word[j] == 'e'; j++){
						eCounter++;
						letterCount++;
					}
					if(eCounter >= 4){
						return 0;
						//printf("no\n");
					}
					else{
						int upperCaseCount = 0;
						char upperCases[1024];
						for(int j = letterCount; isUpperCase(word[j]); j++){
							upperCases[upperCaseCount] = word[j];
							upperCaseCount++;
							letterCount++;
						}
						if(upperCaseCount&1){
							int wCounter = 0;
							for(int j = letterCount; word[j] == 'w'; j++){
								wCounter ++;
								letterCount ++;
							}
							if((wCounter <= 0) ||(wCounter > 3)){
								return 0;
								//printf("no\n");
							}
							else{
								int digitCount = 0;
								for(int j = letterCount; isDecimalDigit(word[j]); j++){
									letterCount++;
									digitCount++;
								}
								if((digitCount < 1)||(digitCount >3)){
									return 0;
									//printf("no\n");
								}
								else{
									char lastChars[1024];
									int lastLetter = 0;
									for(int j = letterCount; word[j] != '\0'; j++ ){
										lastChars[lastLetter] = word[letterCount];
										letterCount++;
										lastLetter++;
									}
									//lastChars[lastLetter] = '\0';
									if(checkOddChars(upperCases,lastChars)){
										return 1;
										//printf("yes\n");
									}
									else{
										return 0;
										//printf("no\n");
									}
								}
							}
						}
						else{
							return 0;
							//printf("no\n");
						}
					}

					break;
				}
				case 2:{
					int letterCount = 0;
					int aCounter = 0;
					int j = letterCount;
					//char c = word[j];
					for(int j = letterCount; word[j] == 'a'; j++){
						aCounter++;
						letterCount++;
					}
					/*for(c != 'a'){
						aCounter++;
						letterCount++;
						j++;
						c = word[j];
					}*/
					//int j = letterCount;
				/*	for(int k = letterCount; word[k] != 'a'; k++){
						aCounter++;
						letterCount++;
					}*/
					if(!(letterCount&1)){
						return 0;
						//printf("no\n");
					}
					else{
						int upperCaseCounter = 0;
						char upperCases[1024];
						for(int j = letterCount; isUpperCase(word[j]); j++){
							upperCases[upperCaseCounter] = word[j];
							upperCaseCounter ++;
							letterCount ++;
						}
						if(!(upperCaseCounter&1)){
							return 0;
							//printf("no\n");
						}
						else{
							int nCounter = 0;
							for(int j = letterCount; word[j] == 'n'; j++){
								nCounter ++;
								letterCount ++;
							}
							if((nCounter < 1) || (nCounter>3)){
								return 0;
								//printf("no\n");
							}
							else{
								char upperBuf[1024];
								int upperCount = 0;
								for(int j = letterCount; isUpperCase(word[j]); j++){
									letterCount++;
									upperBuf[upperCount] = word[j];
									upperCount++;
								}
								upperBuf[upperCount] = '\0';
								if(!checkOddChars(upperCases,upperBuf)){
									return 0;
									//printf("no\n");
								}
								else{
									int intCount = 0;
									for(int j = letterCount; isDecimalDigit(word[j]); j++){
										letterCount ++;
										intCount ++;
									}
									if(word[letterCount] != '\0'){
										return 0;
										//printf("no\n");
									}
									else{
										if((intCount < 1)||(intCount > 3)){
											return 0;
											//printf("no\n");
										}
										else{
											return 1;
											//printf("yes\n");
										}
									}
								}
							}
						}
					}
					break;
				}
				default:{
					break;
				}
			}
	return 0;
}

int main(int argc, const char* argv[]){
	int TMODE = 0;
	int flagCount = 0;

	//Mode = 0, corresponds to mode A
	//Mode = 1, corresponds to mode B
	//Mode = 2, corresponds to mode C
	int MODE = 0;

	if(argc < 2){
		return 0;
	}
	for(int i = 1; i < 3; i++){
		const char* arg = argv[i];
		if(arg[0] != '-'){
			break;
		}
		flagCount ++;
			switch (arg[1]){
			case 'a':
				MODE = 0;
				printf("A MODE\n");
				break;
			case 'b':
				MODE = 1;
				printf("B MODE\n");
				break;
			case 'c':
				MODE = 2;
				printf("C MODE\n");
				break;
			case 't':
				TMODE = 1;
				break;
			default :
				break;
			}
	}
	for(int i = flagCount+1; i < argc; i++){

	//	char word[1024];
		//int last = 0;
		/*for(int j = 0; argv[i][j] != '\0'; j++){
			word[j] = argv[i][j];
			last = j;
		}
		word[last + 1] = '\0';*/
		const char* word = argv[i];
		if(TMODE){
			//do conversion on word.
		}
		else{
			if(checkArgument(word,MODE)){
				printf("yes\n");
			}
			else{
				printf("no\n");

			}
			//translate
		}
//		switch(MODE){
//			case 0:{
//				printf("made it to case 0");
//				//check for even amount of e
//				int letterCount = 0;
//				int eCounter = 0;
//				for(int j = 0; word[j] == 'e'; j++){
//					eCounter ++;
//					letterCount ++;
//				}
//				if((eCounter&1)){
//					if(!TMODE){
//						printf("no\n");
//					}
//				}
//				else{
//					int pCounter = 0;
//					for(int j = letterCount; word[j] == 'p'; j++){
//						pCounter ++;
//						letterCount++;
//					}
//					if(pCounter&1){
//						int upCounter = 0;
//						for(int j = letterCount; isUpperCase(word[j]); j++){
//							upCounter++;
//							letterCount++;
//						}
//						if(upCounter&1){
//							if(!TMODE){
//								printf("yes\n");
//							}
//							else{
//								char conversion[letterCount];
//								for(int j = 0; j < letterCount; j++){
//									conversion[j] = word[letterCount-1];
//								}
//								conversion[letterCount] = '\0';
//								printf("%s\n", conversion);
//							}
//						}
//						else{
//							if(!TMODE)
//								printf("no\n");
//						}
//					}
//					else{
//						if(!TMODE)
//							printf("no\n");
//					}
//				}
//				break;
//			}
//			case 1:{
//				//printf("made it to case 1");
//				int eCounter = 0;
//				int letterCount = 0;
//				for(int j = 0; word[j] == 'e'; j++){
//					eCounter++;
//					letterCount++;
//				}
//				if(eCounter >= 4){
//					printf("no\n");
//				}
//				else{
//					int upperCaseCount = 0;
//					char upperCases[1024];
//			//		int jCount = 0;
//					for(int j = letterCount; isUpperCase(word[j]); j++){
//
//						upperCases[upperCaseCount] = word[j];
//						upperCaseCount++;
//						letterCount++;
//			//			jCount = j - letterCount;
//					}
//
//			//		upperCases[jCount] = '\0';
//					if(upperCaseCount&1){
//						int wCounter = 0;
//						for(int j = letterCount; word[j] == 'w'; j++){
//							wCounter ++;
//							letterCount ++;
//						}
//						if((wCounter <= 0) ||(wCounter > 3)){
//							printf("no\n");
//						}
//						else{
//							int digitCount = 0;
//							for(int j = letterCount; isDecimalDigit(word[j]); j++){
//								letterCount++;
//								digitCount++;
//							}
//							if((digitCount < 1)||(digitCount >3)){
//								printf("no\n");
//							}
//							else{
//								char lastChars[1024];
//								int lastLetter = 0;
//								for(int j = letterCount; word[j] != '\0'; j++ ){
//								//	printf("%c\n", lastChars[j - letterCount]);
//									lastChars[lastLetter] = word[letterCount];
//									letterCount++;
//									lastLetter++;
//								}
//								//lastChars[lastLetter] = '\0';
//								if(checkOddChars(upperCases,lastChars)){
//									printf("yes\n");
//								}
//								else{
//									printf("no\n");
//								}
//							}
//						}
//					}
//					else{
//						printf("no\n");
//					}
//				}
//
//				break;
//			}
//			case 2:{
//				int letterCount = 0;
//				int aCounter = 0;
//				int j = letterCount;
//				char c = word[j];
//				for(int j = letterCount; word[j] == 'a'; j++){
//					aCounter++;
//					letterCount++;
//				}
//				/*for(c != 'a'){
//					aCounter++;
//					letterCount++;
//					j++;
//					c = word[j];
//				}*/
//				//int j = letterCount;
//			/*	for(int k = letterCount; word[k] != 'a'; k++){
//					aCounter++;
//					letterCount++;
//				}*/
//				if(!(letterCount&1)){
//					printf("no\n");
//				}
//				else{
//					int upperCaseCounter = 0;
//					char upperCases[1024];
//					for(int j = letterCount; isUpperCase(word[j]); j++){
//						upperCases[upperCaseCounter] = word[j];
//						upperCaseCounter ++;
//						letterCount ++;
//					}
//					if(!(upperCaseCounter&1)){
//						printf("no\n");
//					}
//					else{
//						int nCounter = 0;
//						for(int j = letterCount; word[j] == 'n'; j++){
//							nCounter ++;
//							letterCount ++;
//						}
//						if((nCounter < 1) || (nCounter>3)){
//							printf("no\n");
//						}
//						else{
//							char upperBuf[1024];
//							int upperCount = 0;
//							for(int j = letterCount; isUpperCase(word[j]); j++){
//								letterCount++;
//								upperBuf[upperCount] = word[j];
//								upperCount++;
//							}
//							upperBuf[upperCount] = '\0';
//							if(!checkOddChars(upperCases,upperBuf)){
//								printf("no\n");
//							}
//							else{
//								int intCount = 0;
//								for(int j = letterCount; isDecimalDigit(word[j]); j++){
//									letterCount ++;
//									intCount ++;
//								}
//								if(word[letterCount] != '\0'){
//									printf("no\n");
//								}
//								else{
//									if((intCount < 1)||(intCount > 3)){
//										printf("no\n");
//									}
//									else{
//										printf("yes\n");
//									}
//								}
//							}
//						}
//					}
//				}
//				break;
//			}
//			default:{
//				break;
//			}
//		}
	}
	return 0;
}


